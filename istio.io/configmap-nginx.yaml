apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  # Adding new entries here will make them appear as files in the deployment.
  nginx.conf: |
    worker_processes 5;

    events {
    }

    http {
      # Certs for all SSL server_names.
      ssl_certificate     /certs/tls.crt;
      ssl_certificate_key /certs/tls.key;

      # SSL Session cache
      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 18h;

      # Proxy settings
      proxy_ssl_session_reuse on;

      # This is the main site.
      #
      # Upgrade HTTP to HTTPS.
      server {
      	server_name istio.io;
        listen 80;

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        location / {
          return 301 https://$server_name$request_uri;
        }
      }

      # Handle HTTPS.
      server {
        server_name istio.io;
        listen 443 ssl http2;

        if ($arg_go-get = "1") {
          # This is a go-get operation.
          # Send any file in any repo to static content.
          rewrite ^/([^/]*)(/.*)?$  /_golang-go-get/$1.html;
        }

        location /_golang-go-get {
          # Serve static content.
          alias /www/golang;
        }

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        # Proxy to the real site.
        # We set the host to the vanity domain `istio.io` but proxy to
        # `istio.github.io` so that any relative redirects it generates on
        # the github side are to the vanity domain.  DNS points the vanity
        # domain at this nginx.
        location / {
          proxy_set_header Host istio.io;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
          proxy_pass https://istio.github.io;
        }
      }

      # Upgrade HTTP to HTTPS
      server {
        server_name testing.istio.io;
        listen 80;

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        return 301 https://$server_name$request_uri;
      }

      server {
        server_name testing.istio.io;
        listen 443 ssl http2;

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        location / {
          proxy_set_header Host testing.istio.io;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
          proxy_pass https://130.211.38.63;
        }
      }

      # Upgrade HTTP to HTTPS
      server {
        server_name velodrome.istio.io;
        listen 80;

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        return 301 https://$server_name$request_uri;
      }

      server {
        server_name velodrome.istio.io;
        listen 443 ssl http2;

        location = /_healthz {
          add_header Content-Type text/plain;
          return 200 "ok\n";
        }

        location / {
          proxy_set_header Host velodrome.istio.io;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
          proxy_pass http://130.211.224.127;
        }
      }
    }
